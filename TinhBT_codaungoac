import java.util.Stack;

public class TinhBT {
    //Do uu tien:
    public static int isOperator(char c) {
        if( (c == '+') || (c == '-') ) return 1;
        if( (c == '*') || (c == '/') ) return 2;
        if( (c == '(') || (c == ')') ) return 3;
        return 0;
    }

    public static String toHauto(String st) {

        Stack<Character> s = new Stack<>();
        StringBuilder ht = new StringBuilder();
        int dem = 0;
        for (int i = 0; i < st.length(); i++)
        {
            char token = st.charAt(i);
            if (isOperator(token) == 0) ht.append(token);
            else if(token == '(') {
                dem++;
                s.push(token);
            }
            else {
                if (s.empty()) s.push(token);
                else  {
                    char x = s.peek();
                    if (x == '(') s.push(token);
                    else {
                        if (token == ')') {
                            while (s.peek() != '(') {
                                ht.append(s.pop());
                            }
                            s.pop();
                            dem--;
                        }
                        else {
                            if (isOperator(token) <= isOperator(x)) {
                                if (dem == 0) {
                                    while (!s.empty()) {
                                        ht.append(s.pop());
                                    }
                                }
                                else {
                                    while (s.peek() != '(') {
                                        ht.append(s.pop());
                                    }
                                }
                            }
                            s.push(token);
                        }
                    }
                }

            }
        }
        while (!s.empty()) {
            ht.append(s.pop());
        }
        return ht.toString();
    }


    //Tinh toan:
    public static double tinhHauto(String st) {

        Stack<Double> stso = new Stack<>(); //luu so

        for (int i = 0; i < st.length(); i++) {
            if( isOperator(st.charAt(i))==0 ) {
                stso.push((double) (st.charAt(i)-48) );
            }
            else {
                double y = stso.pop(), x= stso.pop();
                switch (st.charAt(i)) {
                    case '+' : stso.push(x+y); break;
                    case '-' : stso.push(x-y); break;
                    case '*' : stso.push(x*y); break;
                    case '/' : stso.push(x/y); break;
                    default:
                        break;
                }
            }
        }
        return stso.peek();
    }
}
